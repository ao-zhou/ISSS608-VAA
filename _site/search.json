[
  {
    "objectID": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html",
    "href": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html",
    "title": "Take-home_Ex03",
    "section": "",
    "text": "pacman::p_load(jsonlite, tidygraph, ggraph, visNetwork, graphlayouts, ggforce, tidytext, tidyverse)\n\n\nmc3_data <- fromJSON(\"data/MC3.json\")\n\n\nmc3_edges <- as_tibble(mc3_data$links) %>%\n  distinct() %>%\n  mutate(source = as.character(source),\n         target = as.character(target),\n         type = as.character(type)) %>%\n  group_by(source, target, type) %>%\n  summarise(weights = n()) %>%\n  filter(source != target) %>%\n  ungroup()\n\n\nmc3_nodes <- as_tibble(mc3_data$nodes) %>%\n  mutate(country = as.character(country),\n         id = as.character(id),\n         product_services = as.numeric(as.character(revenue_omu)),\n         type = as.character(type)) %>%\n  select(id, country, type, revenue_omu, product_services)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html",
    "title": "Take-home Exercise 1",
    "section": "",
    "text": "City of Engagement, with a total population of 50,000, is a small city located at Country of Nowhere. The city serves as a service centre of an agriculture region surrounding the city. The main agriculture of the region is fruit farms and vineyards. The local council of the city is in the process of preparing the Local Plan 2023. A sample survey of 1,000 representative residents had been conducted to collect data related to their household demographic and spending patterns, among other things. The city aims to use the data to assist with their major community revitalization efforts, including how to allocate a very large city renewal grant they have recently received."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#load-r-packages",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#load-r-packages",
    "title": "Take-home Exercise 1",
    "section": "2.1 Load R packages",
    "text": "2.1 Load R packages\nThe code chunk below uses pacman::p_load() to check if packages are installed. If they are, they will be launched into R. The packages installed are:\n\ntidyverse: A collection of core packages designed for data science, used extensively for data preparation and wrangling.\nggstatsplot: for creating graphics with details from statistical tests.\nggiraph: for making ‘ggplot’ graphics interactive\nplotly: for plotting interactive statistical graphs.\ndplyr: for data wrangling and transformation.\nknitr: for dynamic report generation.\nggridges: for plotting ridgeline plots\nggdist: for visualising distribution and uncertainty\n\nAll packages can be found within CRAN.\n\n#Load packages\npacman::p_load(tidyverse, ggstatsplot, ggiraph, plotly, dplyr, knitr, ggridges, ggdist, ggthemes)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#import-the-data",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#import-the-data",
    "title": "Take-home Exercise 1",
    "section": "2.2 Import the data",
    "text": "2.2 Import the data\nImporting the data from csv using read_csv() from Participants and FinancialJounal csv files.\n\n#Import Data\nparticipants <- read_csv(\"data/Participants.csv\")\nfinancial_journal <-read_csv(\"data/FinancialJournal.csv\")"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#data-wrangling",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#data-wrangling",
    "title": "Take-home Exercise 1",
    "section": "2.3 Data wrangling",
    "text": "2.3 Data wrangling\n\n2.3.1 Check data types\nFirst, check if all data imported are showing the correct types.\n\nparticipants\n\n# A tibble: 1,011 × 7\n   participantId householdSize haveKids   age educationLevel      interestGroup\n           <dbl>         <dbl> <lgl>    <dbl> <chr>               <chr>        \n 1             0             3 TRUE        36 HighSchoolOrCollege H            \n 2             1             3 TRUE        25 HighSchoolOrCollege B            \n 3             2             3 TRUE        35 HighSchoolOrCollege A            \n 4             3             3 TRUE        21 HighSchoolOrCollege I            \n 5             4             3 TRUE        43 Bachelors           H            \n 6             5             3 TRUE        32 HighSchoolOrCollege D            \n 7             6             3 TRUE        26 HighSchoolOrCollege I            \n 8             7             3 TRUE        27 Bachelors           A            \n 9             8             3 TRUE        20 Bachelors           G            \n10             9             3 TRUE        35 Bachelors           D            \n# ℹ 1,001 more rows\n# ℹ 1 more variable: joviality <dbl>\n\n\nFor participants table, we noticed below:\n\nparticipantId is in <dbl> format and needs to be converted to <factor>.\nhouseholdSize and age are in <dbl> format and need to be converted to <int>.\neducationLevel and interestGroup need to be converted into <factor> from <chr>.\n\nThe code chunk below uses mutate_at() from dplyr package to convert data type.\n\n# convert participantId, educationLevel and interestGroup to factor\ncol1 <- c(\"participantId\", \"educationLevel\", \"interestGroup\")\nparticipants %>% mutate_at(col1, as.factor) \n\n# convert householdSize and ago to integer\ncol2 <- c(\"householdSize\", \"age\")\nparticipants %>% mutate_at(col2, as.integer) \n\nThen we will check the same for financial_journal.\n\nfinancial_journal\n\n# A tibble: 1,513,636 × 4\n   participantId timestamp           category  amount\n           <dbl> <dttm>              <chr>      <dbl>\n 1             0 2022-03-01 00:00:00 Wage      2473. \n 2             0 2022-03-01 00:00:00 Shelter   -555. \n 3             0 2022-03-01 00:00:00 Education  -38.0\n 4             1 2022-03-01 00:00:00 Wage      2047. \n 5             1 2022-03-01 00:00:00 Shelter   -555. \n 6             1 2022-03-01 00:00:00 Education  -38.0\n 7             2 2022-03-01 00:00:00 Wage      2437. \n 8             2 2022-03-01 00:00:00 Shelter   -557. \n 9             2 2022-03-01 00:00:00 Education  -12.8\n10             3 2022-03-01 00:00:00 Wage      2367. \n# ℹ 1,513,626 more rows\n\n\nFor financial_journal table, we noticed below:\n\nparticipantId is in <dbl> format and needs to be converted to <factor>.\ncategory needs to be converted into <factor> from <chr>.\n\nSimilar to above, the code chunk below uses mutate_at() from dplyr package to convert data type.\n\n# convert participantId and category into factor\ncol3 <- c( \"participantId\", \"category\")\nfinancial_journal %>% mutate_at(col3, as.factor) \n\n\n\n2.3.2 Check missing values\nis.na() function is used to confirm that there are no missing values in the datasets.\n\nany(is.na(participants))\n\n[1] FALSE\n\n\n\nany(is.na(financial_journal))\n\n[1] FALSE\n\n\n\n\n2.3.3 Data cleaning\nCheck data summary for participants using unique() for categorical and discrete numeric data.\n\nunique(participants$householdSize)\n\n[1] 3 2 1\n\n\n\nunique(participants$haveKids)\n\n[1]  TRUE FALSE\n\n\n\nsort(unique(participants$age))\n\n [1] 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42\n[26] 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60\n\n\n\nunique(participants$educationLevel)\n\n[1] \"HighSchoolOrCollege\" \"Bachelors\"           \"Graduate\"           \n[4] \"Low\"                \n\n\n\nsort(unique(participants$interestGroup))\n\n [1] \"A\" \"B\" \"C\" \"D\" \"E\" \"F\" \"G\" \"H\" \"I\" \"J\"\n\n\nCheck the same financial_journal.\n\nunique(financial_journal$category)\n\n[1] \"Wage\"           \"Shelter\"        \"Education\"      \"RentAdjustment\"\n[5] \"Food\"           \"Recreation\"    \n\n\n\n\n2.3.4 Prepare the data for visualisation\nGroup the financial_journals by participantId and category.\n\nfin_agg <- financial_journal %>% group_by(participantId, category) %>% summarise(amount = sum(amount))\n\nUse left_join() from dplyr package to join two tables.\n\ncombined <- left_join(fin_agg, participants, by = c(\"participantId\" = \"participantId\"))\n\nThe final dataset combined is displayed below using knitr::kable() function.\n\nkable(head(combined), \"simple\")\n\n\n\n\nparticipantId c\nategory\namount\nhouseholdSize h\naveKids\nage e\nducationLevel i\nnterestGroup\njoviality\n\n\n\n\n0\nEducation\n-494.0699\n3\nTRUE\n36\nHighSchoolOrCollege\nH\n0.0016267\n\n\n0\nFood\n-3141.9762\n3\nTRUE\n36\nHighSchoolOrCollege\nH\n0.0016267\n\n\n0\nRecreation\n-4384.0672\n3\nTRUE\n36\nHighSchoolOrCollege\nH\n0.0016267\n\n\n0\nShelter\n-7214.8521\n3\nTRUE\n36\nHighSchoolOrCollege\nH\n0.0016267\n\n\n0\nWage\n109816.5883\n3\nTRUE\n36\nHighSchoolOrCollege\nH\n0.0016267\n\n\n1\nEducation\n-494.0699\n3\nTRUE\n25\nHighSchoolOrCollege\nB\n0.3280865"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#education-level",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#education-level",
    "title": "Take-home Exercise 1",
    "section": "3.1 Education level",
    "text": "3.1 Education level\n\n3.1.1 Education level distribution\nCheck the distribution of education level. People graduated from high school and college represent more than half of the sample.\n\nThe plotThe code chunk\n\n\n\n\n\n\n\n\n\n\nggplot(participants, aes(x = fct_rev(fct_infreq(educationLevel)))) +\n  geom_bar(width = 0.5) +\n  coord_flip() +\n  labs(x = \"Education Level\")  + \n  ggtitle(\"Count by Education Level\")\n\n\n\n\n\n\n3.1.2 Wage distribution by education level\nWith no surprise, people with higher education has higher median wage. Interestingly, wage distribution for people with low and high school or college education has two modes.\n\nThe plotThe code chunk\n\n\n\n\n\n\n\n\n\n\nggplot(subset(combined, category == \"Wage\"),\n       aes(x = amount,\n           y = educationLevel,\n           fill = factor(stat(quantile))\n           )) + \n  stat_density_ridges(\n    geom = \"density_ridges_gradient\",\n    calc_ecdf = TRUE,\n    quantiles = 4,\n    quantile_lines = TRUE\n  ) +\n  scale_fill_viridis_d(name = \"Quartiles\") +\n  theme_ridges() +\n  labs(x = \"Wage\", y = \"Education level\")  +\n  ggtitle(\"Wage distribution by Education Level\")"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#spend",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#spend",
    "title": "Take-home Exercise 1",
    "section": "3.2 Spend",
    "text": "3.2 Spend\nCreate a table containing only spend for visualisation in this section.\n\nspend <- subset(combined, category != \"Wage\" & category != \"RentAdjustment\")\n\n\n3.2.1 Spend by category\nShelter takes up a big portion for spend according to the sample.\n\nThe plotThe code chunk\n\n\n\n\n\n\n\n\n\n\nggplot(spend,\n       aes(x = category, \n           y = - amount, \n           fill = category)) +\n  geom_violin(width = 2, alpha = 0.5) +\n  geom_boxplot_interactive(width = 0.2, alpha = 0.5) +\n  theme(legend.position = \"none\") +\n  labs(y = \"Spend\")  +\n  ggtitle(\"Spend by Category\")\n\n\n\n\n\n\n3.2.2 Spend difference between people with and without kids\nCreate a table aggregating spend by participant.\n\nspend_agg <- spend %>% group_by(participantId, haveKids) %>% summarise(amount = - sum(amount))\n\nIn the code chunk below, ggbetweenstats() is used to build a visual for two-sample mean test of spend amount by having kids or not. We can see that with 95% confidence, people having kids spend more than people having no kids.\n\n\nShow the code\nggbetweenstats(\n  data = spend_agg,\n  x = haveKids, \n  y = amount,\n  title = \"Two-sample mean test for spend by having kids\",\n  type = \"np\",\n  messages = FALSE\n)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#net-income-and-wage",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#net-income-and-wage",
    "title": "Take-home Exercise 1",
    "section": "3.3 Net income and wage",
    "text": "3.3 Net income and wage\nAggregate the financial transactions for net and wage at participant level and then join with participants.\n\n\nShow the code\n# create a table with participants net income/loss\nnet <- financial_journal %>% group_by(participantId) %>% summarise(net_income = sum(amount))\n\n# create a table with participants wage\nwage <- subset(financial_journal, category == \"Wage\") %>% group_by(participantId) %>% summarise(wage = sum(amount))\n\n# join the net income/loss, wage table with participants\nnet_combined <- left_join(net, wage, by = c(\"participantId\" = \"participantId\"))\nnet_combined <- left_join(net_combined, participants, by = c(\"participantId\" = \"participantId\"))\n\n\nCheck the correlation between wage and net income. People who are single have more net income compared to people who are married with same amount of wage.\n\n\nShow the code\n#Initiating the base plot\nplot_ly(data = net_combined,\n        x = ~wage,\n        y = ~net_income,\n        type = 'scatter',\n        mode = 'markers',\n        sizes = c(5, 15),\n        color = ~factor(householdSize),\n        marker = list(opacity = 0.6,\n                      sizemode = 'diameter',\n                      line = list(width = 0.2, color = '#FFFFFF')),\n        \n#Creating tooltip details\n        hovertemplate = ~paste(\"<br>Participant Id\", participantId,\n                               \"<br>Household Size:\", householdSize,\n                               \"<br>Have Kids:\", haveKids,\n                               \"<br>Age:\", age,\n                               \"<br>Education Level:\", educationLevel,\n                               \"<br>Interest Group:\", interestGroup)) |>\n\n  \n#Configuring the plot and axis title and range  \n  layout(title = \"Correlation between wage and net income\",\n         xaxis = list(title = \"Wage \"\n                      ),\n         yaxis = list(title = \"Net income\"\n                      ))\n\n\n\n\n\n\n\n\n\n\n\n\nTip\n\n\n\nHoover over to see the details of the dot."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "ISSS608-VAA",
    "section": "",
    "text": "Welcome to ISSS608 Visual Analytics and Applications. In this website, you will find my coursework prepared for this course."
  },
  {
    "objectID": "In-class_Ex/In-class_Ex05/In-class_Ex05.html",
    "href": "In-class_Ex/In-class_Ex05/In-class_Ex05.html",
    "title": "In-class Exercise 5",
    "section": "",
    "text": "lubridate is part of tidyverse now, so there is no need to import lubridate separately.\n\n\nShow the code\npacman::p_load(igraph, tidyverse, tidygraph, ggraph, visNetwork, clock, graphlayouts)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex05/In-class_Ex05.html#import-nodes-and-edges-data",
    "href": "In-class_Ex/In-class_Ex05/In-class_Ex05.html#import-nodes-and-edges-data",
    "title": "In-class Exercise 5",
    "section": "2.1 Import nodes and edges data",
    "text": "2.1 Import nodes and edges data\n\n\nShow the code\nGAStech_nodes <- read_csv(\"data/GAStech_email_node.csv\")\nGAStech_edges <- read_csv(\"data/GAStech_email_edge-v2.csv\")\n\n\n\n\n\n\n\n\nTip\n\n\n\nFor the edges data frame, the first column should always be source and second column be target.\n\n\n\n\n\n\n\n\nThis is import.\n\n\n\nFor missing values, use “unknown” or “no value” instead of build-in missing value function to avoid losing the data entry."
  },
  {
    "objectID": "In-class_Ex/In-class_Ex05/In-class_Ex05.html#review-the-imported-data",
    "href": "In-class_Ex/In-class_Ex05/In-class_Ex05.html#review-the-imported-data",
    "title": "In-class Exercise 5",
    "section": "2.2 Review the imported data",
    "text": "2.2 Review the imported data\nUse glimpse() of dplyr to examine the structure of the data frame.\n\n\nShow the code\nglimpse(GAStech_edges)\n\n\nRows: 9,063\nColumns: 8\n$ source      <dbl> 43, 43, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 26, 26, 26…\n$ target      <dbl> 41, 40, 51, 52, 53, 45, 44, 46, 48, 49, 47, 54, 27, 28, 29…\n$ SentDate    <chr> \"6/1/2014\", \"6/1/2014\", \"6/1/2014\", \"6/1/2014\", \"6/1/2014\"…\n$ SentTime    <time> 08:39:00, 08:39:00, 08:58:00, 08:58:00, 08:58:00, 08:58:0…\n$ Subject     <chr> \"GT-SeismicProcessorPro Bug Report\", \"GT-SeismicProcessorP…\n$ MainSubject <chr> \"Work related\", \"Work related\", \"Work related\", \"Work rela…\n$ sourceLabel <chr> \"Sven.Flecha\", \"Sven.Flecha\", \"Kanon.Herrero\", \"Kanon.Herr…\n$ targetLabel <chr> \"Isak.Baza\", \"Lucas.Alcazar\", \"Felix.Resumir\", \"Hideki.Coc…\n\n\nNotice that the SentDate is categorized as “Character” instead of “Date” data type, and we need to change it back to “Date”data type before further analysis."
  },
  {
    "objectID": "In-class_Ex/In-class_Ex05/In-class_Ex05.html#data-wrangling",
    "href": "In-class_Ex/In-class_Ex05/In-class_Ex05.html#data-wrangling",
    "title": "In-class Exercise 5",
    "section": "2.3 Data wrangling",
    "text": "2.3 Data wrangling\n\n2.3.1 Wrangling Time\nThe code chunk below will change the data type of SentDate to “Date”.\n\n\nShow the code\nGAStech_edges <- GAStech_edges %>%\n  mutate(SendDate = dmy(SentDate)) %>%\n  mutate(Weekday = wday(SentDate, label = TRUE, abbr = FALSE))\n\n\nReview the data again after the change.\n\n\nShow the code\nglimpse(GAStech_edges)\n\n\nRows: 9,063\nColumns: 10\n$ source      <dbl> 43, 43, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 26, 26, 26…\n$ target      <dbl> 41, 40, 51, 52, 53, 45, 44, 46, 48, 49, 47, 54, 27, 28, 29…\n$ SentDate    <chr> \"6/1/2014\", \"6/1/2014\", \"6/1/2014\", \"6/1/2014\", \"6/1/2014\"…\n$ SentTime    <time> 08:39:00, 08:39:00, 08:58:00, 08:58:00, 08:58:00, 08:58:0…\n$ Subject     <chr> \"GT-SeismicProcessorPro Bug Report\", \"GT-SeismicProcessorP…\n$ MainSubject <chr> \"Work related\", \"Work related\", \"Work related\", \"Work rela…\n$ sourceLabel <chr> \"Sven.Flecha\", \"Sven.Flecha\", \"Kanon.Herrero\", \"Kanon.Herr…\n$ targetLabel <chr> \"Isak.Baza\", \"Lucas.Alcazar\", \"Felix.Resumir\", \"Hideki.Coc…\n$ SendDate    <date> 2014-01-06, 2014-01-06, 2014-01-06, 2014-01-06, 2014-01-0…\n$ Weekday     <ord> Friday, Friday, Friday, Friday, Friday, Friday, Friday, Fr…\n\n\n\n\n2.3.2 Wrangling attributes\nWith a close examination, GAStech_edges data.frame is at email records level, which is not very useful for visualization. Therefore, we will aggregate individual by date, senders, receivers, main subject and day of the week.\n\n\nShow the code\nGAStech_edges_aggregated <- GAStech_edges %>%\n  filter(MainSubject == \"Work related\") %>%\n  group_by(source, target, Weekday) %>%\n    summarise(Weight = n()) %>%\n  filter(source != target) %>%\n  filter(Weight > 1) %>%\n  ungroup()\n\n\n\n\n\n\n\n\nTip\n\n\n\nAlways check dplyr to use the latest way to wrangle data. Google result may show old ways to solve a problem\n\n\n\n\n\n\n\n\nNote\n\n\n\nungroup() at the end of the code chunk is for future calculation. If it’s not done, when we do calculation later it will be based on the grouped data.\n\n\nReview the data again after the change.\n\n\nShow the code\nglimpse(GAStech_edges_aggregated)\n\n\nRows: 1,372\nColumns: 4\n$ source  <dbl> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,…\n$ target  <dbl> 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 6,…\n$ Weekday <ord> Sunday, Monday, Tuesday, Wednesday, Friday, Sunday, Monday, Tu…\n$ Weight  <int> 5, 2, 3, 4, 6, 5, 2, 3, 4, 6, 5, 2, 3, 4, 6, 5, 2, 3, 4, 6, 5,…"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex05/In-class_Ex05.html#this-is-import.",
    "href": "In-class_Ex/In-class_Ex05/In-class_Ex05.html#this-is-import.",
    "title": "In-class Exercise 5",
    "section": "This is import.",
    "text": "This is import.\nFor missing values, use “unknown” or “no value” instead of build-in missing value function to avoid losing the data entry."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html",
    "title": "Take-home Exercise 2",
    "section": "",
    "text": "The country of Oceanus has sought FishEye International's help in identifying companies possibly engaged in illegal, unreported, and unregulated (IUU) fishing. As part of the collaboration, FishEye's analysts received import/export data for Oceanus' marine and fishing industries. However, Oceanus has informed FishEye that the data is incomplete. To facilitate their analysis, FishEye transformed the trade data into a knowledge graph. Using this knowledge graph, they hope to understand business relationships, including finding links that will help them stop IUU fishing and protect marine species that are affected by it. FishEye analysts found that node-link diagrams gave them a good high-level overview of the knowledge graph. However, they are now looking for visualizations that provide more detail about patterns for entities in the knowledge graph."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#getting-started",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#getting-started",
    "title": "Take-home Exercise 2",
    "section": "2.1 Getting Started",
    "text": "2.1 Getting Started\nInstall R packages needed for data preparation, data wrangling, data analysis and visualisation using the code chunk below.\n\npacman::p_load(jsonlite, tidyverse, tidygraph, ggraph, visNetwork)"
  }
]